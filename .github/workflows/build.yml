on:
  push:
    tags:
      - '*'
jobs:
  build:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
        include:
          - os: windows
            build: |
              mvn clean package
              mkdir build
              mv target/javaexe-1.0.jar build
              jpackage --input build --type app-image --main-jar javaexe-1.0.jar --output application-windows 
            artifact: application-windows.exe
            asset_name: application-windows.exe
          - os: macos
            build: |
              mvn clean package
              mkdir build
              mv target/javaexe-1.0.jar build
              cd build
              jlink --add-modules=ALL-MODULE-PATH --output runtime
              cd ..
              npx caxa --input build --output application-mac --no-include-node -- "{{caxa}}/runtime/bin/java" "-jar" "{{caxa}}/javaexe-1.0.jar"
              chmod +x application-mac
            artifact: application-mac
            asset_name: application-mac
          - os: ubuntu
            build: |
              mvn clean package
              mkdir build
              mv ./target/javaexe-1.0.jar build
              cd build
              jlink --add-modules=ALL-MODULE-PATH --output runtime
              cd ..
              npx caxa --input build --output application-linux --no-include-node -- "{{caxa}}/runtime/bin/java" "-jar" "{{caxa}}/javaexe-1.0.jar"
              chmod +x application-linux
            artifact: application-linux
            asset_name: application-linux
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'
      - run: ${{ matrix.build }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
